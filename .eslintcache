[{"C:\\openAsset\\src\\index.js":"1","C:\\openAsset\\src\\App.js":"2","C:\\openAsset\\src\\reportWebVitals.js":"3","C:\\openAsset\\src\\Pages\\Home\\Home.jsx":"4","C:\\openAsset\\src\\components\\Post.jsx":"5","C:\\openAsset\\src\\components\\Comment.jsx":"6","C:\\openAsset\\src\\components\\Spinner.jsx":"7"},{"size":500,"mtime":1610017925000,"results":"8","hashOfConfig":"9"},{"size":383,"mtime":1610017925000,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610017925000,"results":"11","hashOfConfig":"9"},{"size":2377,"mtime":1613265428239,"results":"12","hashOfConfig":"9"},{"size":657,"mtime":1613250448426,"results":"13","hashOfConfig":"9"},{"size":346,"mtime":1613265443824,"results":"14","hashOfConfig":"9"},{"size":298,"mtime":1613264854014,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eofs4z",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\openAsset\\src\\index.js",[],"C:\\openAsset\\src\\App.js",[],"C:\\openAsset\\src\\reportWebVitals.js",[],"C:\\openAsset\\src\\Pages\\Home\\Home.jsx",["32","33"],"C:\\openAsset\\src\\components\\Post.jsx",["34"],"import React, { Fragment } from 'react';\r\nimport Comment from './Comment';\r\nimport './Post.css';\r\n\r\nimport { FetchType } from 'apollo-boost';\r\n\r\nconst Post = (props) => {\r\n  const { title, body, author, comments } = props;\r\n  const postComments = comments\r\n    .filter((x) => comments.indexOf(x) < 2)\r\n    .map((c) => <Comment commentBody={c.body} commentAuthor={c.author.name} />);\r\n  return (\r\n    <Fragment>\r\n      <h2>{title}</h2>\r\n      <p>{body}</p>\r\n      <p className='author'>~{author}</p>\r\n      <div className='comments'>\r\n        <h3>Comments</h3>\r\n        <p>{postComments}</p>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n",["35","36"],"C:\\openAsset\\src\\components\\Comment.jsx",["37"],"C:\\openAsset\\src\\components\\Spinner.jsx",[],{"ruleId":"38","severity":1,"message":"39","line":1,"column":27,"nodeType":"40","messageId":"41","endLine":1,"endColumn":36},{"ruleId":"38","severity":1,"message":"42","line":32,"column":20,"nodeType":"40","messageId":"41","endLine":32,"endColumn":25},{"ruleId":"38","severity":1,"message":"43","line":5,"column":10,"nodeType":"40","messageId":"41","endLine":5,"endColumn":19},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"38","severity":1,"message":"48","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'FetchType' is defined but never used.","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation"]